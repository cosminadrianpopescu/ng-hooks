{
    "compilerOptions": {
        "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
        "outDir": "./dist/",
        "module": "node16",                                /* Specify what module code is generated. */
        "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
        "forceConsistentCasingInFileNames": false,            /* Ensure that casing is correct in imports. */
        "strict": false,                                      /* Enable all strict type-checking options. */
        "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
        "strictNullChecks": false,                         /* When type checking, take into account 'null' and 'undefined'. */
        "strictBindCallApply": false,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
        "strictPropertyInitialization": false,             /* Check for class properties that are declared but not set in the constructor. */
        "noImplicitThis": false,                           /* Enable error reporting when 'this' is given the type 'any'. */
        "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
        "alwaysStrict": false,                             /* Ensure 'use strict' is always emitted. */
        "noUnusedLocals": false,                           /* Enable error reporting when local variables aren't read. */
        "declaration": true,
        "noUnusedParameters": false,                       /* Raise an error when a function parameter isn't read. */
        "exactOptionalPropertyTypes": false,               /* Interpret optional property types as written, rather than adding 'undefined'. */
        "noImplicitReturns": false,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
        "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
        "noUncheckedIndexedAccess": false,                 /* Add 'undefined' to a type when accessed using an index. */
        "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
        "noPropertyAccessFromIndexSignature": false,       /* Enforces using indexed accessors for keys declared using an indexed type. */
        "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */
        "allowUnreachableCode": true,                     /* Disable error reporting for unreachable code. */
        "emitDecoratorMetadata": true,
        "experimentalDecorators": true,

        /* Completeness */
        // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
        "skipLibCheck": true,                                 /* Skip type checking all .d.ts files. */
        "paths": {
            "rxjs": ["./rxjs"],
            "rxjs/*": ["./rxjs"]
        }
    },
    "exclude": ["spec/**/*.*"],
    "include": ["./ts/reflect.mts", "./ts/index.mts"]
}
